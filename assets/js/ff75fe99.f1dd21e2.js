"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6374],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),g=a,h=u["".concat(s,".").concat(g)]||u[g]||f[g]||i;return n?r.createElement(h,o(o({ref:t},l),{},{components:n})):r.createElement(h,o({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2034:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={},o="First Non-Repeating Character",c={unversionedId:"easy/first_non_repeating_character",id:"easy/first_non_repeating_character",title:"First Non-Repeating Character",description:"Write a function that takes in a string of lowercase English-alphabet letters and returns the index of the string's first non-repeating character.",source:"@site/docs/easy/first_non_repeating_character.md",sourceDirName:"easy",slug:"/easy/first_non_repeating_character",permalink:"/docs/easy/first_non_repeating_character",draft:!1,editUrl:"https://github.com/sieuhuflit/sieuhuflit.github.io/tree/main/docs/easy/first_non_repeating_character.md",tags:[],version:"current",lastUpdatedBy:"Sieu Thai",lastUpdatedAt:1696997124,formattedLastUpdatedAt:"Oct 11, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Find Three Largest Numbers",permalink:"/docs/easy/find_three_largest_numbers"},next:{title:"Generate Document",permalink:"/docs/easy/generate_document"}},s={},p=[],l={toc:p},u="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"first-non-repeating-character"},"First Non-Repeating Character"),(0,a.kt)("admonition",{title:"First Non-Repeating Character",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Write a function that takes in a string of lowercase English-alphabet letters and returns the index of the string's first non-repeating character."),(0,a.kt)("p",{parentName:"admonition"},"The first non-repeating character is the first character in a string that occurs only once."),(0,a.kt)("p",{parentName:"admonition"},"If the input string doesn't have any non-repeating characters, your function should return -1."),(0,a.kt)("p",{parentName:"admonition"},"Sample Input"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},'string = "abcdcaf"\n')),(0,a.kt)("p",{parentName:"admonition"},"Sample Output"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},'1 // The first non-repeating character is "b" and is found at index 1.\n'))),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Solution 1"',title:'"Solution','1"':!0},"// O(n^2) time | O(1) space\nfunction firstNonRepeatingCharacter(string) {\n  for (let i = 0; i < string.length; i++) { \n    let foundDuplicate = false;\n    for (let j = 0; j < string.length; j++) {\n      if (string[i] === string[j] && i !== j) {\n        foundDuplicate = true;\n      }\n    }\n    if (!foundDuplicate) return i;\n  }\n  return -1;\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Solution 2"',title:'"Solution','2"':!0},"// O(n) time | O(1) space\nfunction firstNonRepeatingCharacter(string) {\n  const characterFrequencies = {};\n  for (const character of string) {\n    if (!(character in characterFrequencies)) characterFrequencies[character] = 0;\n    characterFrequencies[character]++;\n  }\n\n  for (let i = 0; i < string.length; i++) {\n    const character = string[i];\n    if (characterFrequencies[character] === 1) return i;\n  }\n  return -1;\n}\n")))}f.isMDXComponent=!0}}]);