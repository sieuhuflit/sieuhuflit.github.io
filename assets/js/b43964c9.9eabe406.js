"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9315],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),s=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(m.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),l=s(n),d=a,f=l["".concat(m,".").concat(d)]||l[d]||p[d]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var u={};for(var m in t)hasOwnProperty.call(t,m)&&(u[m]=t[m]);u.originalType=e,u[l]="string"==typeof e?e:a,o[1]=u;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1106:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={},o="Max Subset Sum No Adjacent",u={unversionedId:"medium/max_subset_sum_no_adjadent",id:"medium/max_subset_sum_no_adjadent",title:"Max Subset Sum No Adjacent",description:"Write a function that takes in an array of positive integers and returns the maximum sum of non-adjacent elements in the array.",source:"@site/docs/medium/max_subset_sum_no_adjadent.md",sourceDirName:"medium",slug:"/medium/max_subset_sum_no_adjadent",permalink:"/docs/medium/max_subset_sum_no_adjadent",draft:!1,editUrl:"https://github.com/sieuhuflit/sieuhuflit.github.io/tree/main/docs/medium/max_subset_sum_no_adjadent.md",tags:[],version:"current",lastUpdatedBy:"sieuhuflit",lastUpdatedAt:1693755323,formattedLastUpdatedAt:"Sep 3, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Majority Element",permalink:"/docs/medium/majority_element"},next:{title:"Merge Binary Trees",permalink:"/docs/medium/merge_binary_tree"}},m={},s=[],c={toc:s},l="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"max-subset-sum-no-adjacent"},"Max Subset Sum No Adjacent"),(0,a.kt)("admonition",{title:"Max Subset Sum No Adjacent",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Write a function that takes in an array of positive integers and returns the maximum sum of non-adjacent elements in the array."),(0,a.kt)("p",{parentName:"admonition"},"If the input array is empty, the function should return 0."),(0,a.kt)("p",{parentName:"admonition"},"Sample Input"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"array = [75, 105, 120, 75, 90, 135]\n")),(0,a.kt)("p",{parentName:"admonition"},"Sample Output"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"330 // 75 + 120 + 135\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Solution 1"',title:'"Solution','1"':!0},"// O(n) time | O(n) space;\nfunction maxSubsetSumNoAdjacent(array) {\n  if (!array.length) return 0;\n  if (array.length === 1) return array[0];\n  const maxSum = array.slice();\n  maxSum[1] = Math.max(array[0], array[1]);\n  for (let i = 2; i < array.length; i++) {\n    maxSum[i] = Math.max(maxSum[i - 1], maxSum[i - 2] + array[i]);\n  }\n  return maxSum[maxSum.legnth - 1];\n}\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Solution 2"',title:'"Solution','2"':!0},"// O(n) time | O(1) space\nfunction maxSubsetSumNoAdjacent(array) {\n  if (!array.length) return 0;\n  if (array.length === 1) return array[0];\n  let second = array[0];\n  let first = Math.max(array[0], array[1]);\n  for (let i = 2; i < array.length; i++) {\n    const current = Math.max(first, second + array[i]);\n    second = first;\n    first = current;\n  }\n  return first;\n}\n\n")))}p.isMDXComponent=!0}}]);