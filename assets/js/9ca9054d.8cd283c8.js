"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8096],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function u(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),m=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):u(u({},r),e)),t},l=function(e){var r=m(e.components);return n.createElement(i.Provider,{value:r},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=m(t),d=a,f=p["".concat(i,".").concat(d)]||p[d]||c[d]||o;return t?n.createElement(f,u(u({ref:r},l),{},{components:t})):n.createElement(f,u({ref:r},l))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,u=new Array(o);u[0]=d;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[p]="string"==typeof e?e:a,u[1]=s;for(var m=2;m<o;m++)u[m]=t[m];return n.createElement.apply(null,u)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9591:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>u,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var n=t(7462),a=(t(7294),t(3905));const o={tags:["Arrays"]},u="Zero Sum Subarray",s={unversionedId:"medium/zero_sum_subarray",id:"medium/zero_sum_subarray",title:"Zero Sum Subarray",description:"You're given a list of integers nums. Write a function that returns a boolean representing whether there exists a zero-sum subarray of nums.",source:"@site/docs/medium/zero_sum_subarray.md",sourceDirName:"medium",slug:"/medium/zero_sum_subarray",permalink:"/docs/medium/zero_sum_subarray",draft:!1,editUrl:"https://github.com/sieuhuflit/sieuhuflit.github.io/tree/main/docs/medium/zero_sum_subarray.md",tags:[{label:"Arrays",permalink:"/docs/tags/arrays"}],version:"current",lastUpdatedBy:"Sieu Thai",lastUpdatedAt:1696998572,formattedLastUpdatedAt:"Oct 11, 2023",frontMatter:{tags:["Arrays"]},sidebar:"tutorialSidebar",previous:{title:"Valid IP Addresses",permalink:"/docs/medium/valid_ip_address"},next:{title:"Design Patterns",permalink:"/docs/category/design-patterns"}},i={},m=[],l={toc:m},p="wrapper";function c(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"zero-sum-subarray"},"Zero Sum Subarray"),(0,a.kt)("admonition",{title:"Zero Sum Subarray",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You're given a list of integers nums. Write a function that returns a boolean representing whether there exists a zero-sum subarray of nums."),(0,a.kt)("p",{parentName:"admonition"},"A zero-sum subarray is any subarray where all of the values add up to zero. A subarray is any contiguous section of the array. For the purposes of this problem, a subarray can be as small as one element and as long as the original array."),(0,a.kt)("p",{parentName:"admonition"},"Sample Input"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"nums = [-5, -5, 2, 3, -2]\n")),(0,a.kt)("p",{parentName:"admonition"},"Sample Output"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"True // The subarray [-5, 2, 3] has a sum of 0\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Solution"',title:'"Solution"'},"// O(n) time | O(n) space - where n is the length of nums\nfunction zeroSumSubarray(nums) {\n  const sums = new Set([0]);\n  let currentSum = 0;\n  for (const num of nums) {\n    currentSum += num;\n    if (sums.has(currentSum)) return true;\n    sums.add(currentSum);\n  }\n\n  return false;\n}\n")))}c.isMDXComponent=!0}}]);