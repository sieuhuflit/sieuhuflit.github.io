"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1284],{9950:e=>{e.exports=JSON.parse('{"label":"Binary Search Trees","permalink":"/docs/tags/binary-search-trees","allTagsPath":"/docs/tags","count":7,"items":[{"id":"medium/bst_construction","title":"BST Construction","description":"Write a BST class for a Binary Search Tree. The class should support:","permalink":"/docs/medium/bst_construction"},{"id":"easy/bst_traversal","title":"BST Traversal","description":"Write three functions that take in a Binary Search Tree (BST) and an empty array, traverse the BST, add its nodes\' values to the input array, and return that array. The three functions should traverse the BST using the in-order, pre-order, and post-order tree-traversal techniques, respectively.","permalink":"/docs/easy/bst_traversal"},{"id":"easy/find_closest_value_in_bst","title":"Find Closest Value In BST","description":"Write a function that takes in a Binary Search Tree (BST) and a target integer value and returns the closest value to that target value contained in the BST.","permalink":"/docs/easy/find_closest_value_in_bst"},{"id":"easy/find_kth_largest_value_in_bst","title":"Find Kth Largest Value In BST","description":"Write a function that takes in a Binary Search Tree (BST) and a positive integer k and returns the kth largest integer contained in the BST.","permalink":"/docs/easy/find_kth_largest_value_in_bst"},{"id":"easy/min_height_bst","title":"Min Height BST","description":"Write a function that takes in a non-empty sorted array of distinct integers, constructs a BST from the integers, and returns the root of the BST.","permalink":"/docs/easy/min_height_bst"},{"id":"easy/reconstruct_bst","title":"Reconstruct BST","description":"The pre-order traversal of a Binary Tree is a traversal technique that starts at the tree\'s root node and visits nodes in the following order:","permalink":"/docs/easy/reconstruct_bst"},{"id":"easy/validate_bst","title":"Validate BST","description":"Write a function that takes in a potentially invalid Binary Search Tree (BST) and returns a boolean representing whether the BST is valid.","permalink":"/docs/easy/validate_bst"}]}')}}]);