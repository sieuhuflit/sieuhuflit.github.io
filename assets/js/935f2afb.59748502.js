"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Easy","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Caesar Cipher Encryptor","href":"/docs/easy/ceasar_cipher_encryptor","docId":"easy/ceasar_cipher_encryptor"},{"type":"link","label":"First Non-Repeating Character","href":"/docs/easy/first_non_repeating_character","docId":"easy/first_non_repeating_character"},{"type":"link","label":"Generate Document","href":"/docs/easy/generate_document","docId":"easy/generate_document"},{"type":"link","label":"Longest Palindromic Substring","href":"/docs/easy/longest_palindromic_substring","docId":"easy/longest_palindromic_substring"},{"type":"link","label":"Semordnilap","href":"/docs/easy/semordnilap","docId":"easy/semordnilap"},{"type":"link","label":"Two number sum","href":"/docs/easy/two_number_sum","docId":"easy/two_number_sum"},{"type":"link","label":"Validate Subsequence","href":"/docs/easy/validate_subsequence","docId":"easy/validate_subsequence"}],"href":"/docs/category/easy"},{"type":"category","label":"Medium","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Binary Tree Diameter","href":"/docs/medium/binary_tree_diameter","docId":"medium/binary_tree_diameter"},{"type":"link","label":"Find Successor","href":"/docs/medium/find_successtor","docId":"medium/find_successtor"},{"type":"link","label":"Height Balanced Binary Tree","href":"/docs/medium/height_balanced_binary_tree","docId":"medium/height_balanced_binary_tree"},{"type":"link","label":"Kadane\'s Algorithm","href":"/docs/medium/kadanes_algorithm","docId":"medium/kadanes_algorithm"},{"type":"link","label":"Levenshtein Distance","href":"/docs/medium/levenshtein_distance","docId":"medium/levenshtein_distance"},{"type":"link","label":"Longest Peak","href":"/docs/medium/longest_peak","docId":"medium/longest_peak"},{"type":"link","label":"Max Subset Sum No Adjacent","href":"/docs/medium/max_subset_sum_no_adjadent","docId":"medium/max_subset_sum_no_adjadent"},{"type":"link","label":"Min Number Of Coins For Change","href":"/docs/medium/min_number_of_coins_for_change","docId":"medium/min_number_of_coins_for_change"},{"type":"link","label":"Number Of Ways To Make Change","href":"/docs/medium/number_of_ways_to_make_change","docId":"medium/number_of_ways_to_make_change"},{"type":"link","label":"Symmetrical Tree","href":"/docs/medium/symetrical_tree","docId":"medium/symetrical_tree"},{"type":"link","label":"Valid IP Addresses","href":"/docs/medium/valid_ip_address","docId":"medium/valid_ip_address"}],"href":"/docs/category/medium"}]},"docs":{"easy/ceasar_cipher_encryptor":{"id":"easy/ceasar_cipher_encryptor","title":"Caesar Cipher Encryptor","description":"Given a non-empty string of lowercase letters and a non-negative integer representing a key, write a function that returns a new string obtained by shifting every letter in the input string by k positions in the alphabet, where k is the key.","sidebar":"tutorialSidebar"},"easy/first_non_repeating_character":{"id":"easy/first_non_repeating_character","title":"First Non-Repeating Character","description":"Write a function that takes in a string of lowercase English-alphabet letters and returns the index of the string\'s first non-repeating character.","sidebar":"tutorialSidebar"},"easy/generate_document":{"id":"easy/generate_document","title":"Generate Document","description":"You\'re given a string of available characters and a string representing a document that you need to generate. Write a function that determines if you can generate the document using the available characters. If you can generate the document, your function should return true; otherwise, it should return false.","sidebar":"tutorialSidebar"},"easy/longest_palindromic_substring":{"id":"easy/longest_palindromic_substring","title":"Longest Palindromic Substring","description":"Write a function that, given a string, returns its longest palindromic substring.","sidebar":"tutorialSidebar"},"easy/semordnilap":{"id":"easy/semordnilap","title":"Semordnilap","description":"Semordnilap","sidebar":"tutorialSidebar"},"easy/two_number_sum":{"id":"easy/two_number_sum","title":"Two number sum","description":"Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. If any two numbers in the input array sum up to the target sum, the function should return them in an array, in any order. If no two numbers sum up to the target sum, the function should return an empty array.","sidebar":"tutorialSidebar"},"easy/validate_subsequence":{"id":"easy/validate_subsequence","title":"Validate Subsequence","description":"Given two non-empty arrays of integers, write a function that determines whether the second array is a subsequence of the first one.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"","sidebar":"tutorialSidebar"},"medium/binary_tree_diameter":{"id":"medium/binary_tree_diameter","title":"Binary Tree Diameter","description":"Write a function that takes in a Binary Tree and returns its diameter. The diameter of a binary tree is defined as the length of its longest path, even if that path doesn\'t pass through the root of the tree.","sidebar":"tutorialSidebar"},"medium/find_successtor":{"id":"medium/find_successtor","title":"Find Successor","description":"Write a function that takes in a Binary Tree (where nodes have an additional pointer to their parent node) as well as a node contained in that tree and returns the given node\'s successor.","sidebar":"tutorialSidebar"},"medium/height_balanced_binary_tree":{"id":"medium/height_balanced_binary_tree","title":"Height Balanced Binary Tree","description":"You\'re given the root node of a Binary Tree. Write a function that returns true if this Binary Tree is height balanced and false if it isn\'t.","sidebar":"tutorialSidebar"},"medium/kadanes_algorithm":{"id":"medium/kadanes_algorithm","title":"Kadane\'s Algorithm","description":"Write a function that takes in a non-empty array of integers and returns the maximum sum that can be obtained by summing up all of the integers in a non-empty subarray of the input array. A subarray must only contain adjacent numbers (numbers next to each other in the input array).","sidebar":"tutorialSidebar"},"medium/levenshtein_distance":{"id":"medium/levenshtein_distance","title":"Levenshtein Distance","description":"Write a function that takes in two strings and returns the minimum number of edit operations that need to be performed on the first string to obtain the second string.","sidebar":"tutorialSidebar"},"medium/longest_peak":{"id":"medium/longest_peak","title":"Longest Peak","description":"Write a function that takes in an array of integers and returns the length of the longest peak in the array.","sidebar":"tutorialSidebar"},"medium/max_subset_sum_no_adjadent":{"id":"medium/max_subset_sum_no_adjadent","title":"Max Subset Sum No Adjacent","description":"Write a function that takes in an array of positive integers and returns the maximum sum of non-adjacent elements in the array.","sidebar":"tutorialSidebar"},"medium/min_number_of_coins_for_change":{"id":"medium/min_number_of_coins_for_change","title":"Min Number Of Coins For Change","description":"Given an array of positive integers representing coin denominations and a single non-negative integer n representing a target amount of money, write a function that returns the smallest number of coins needed to make change for (to sum up to) that target amount using the given coin denominations.","sidebar":"tutorialSidebar"},"medium/number_of_ways_to_make_change":{"id":"medium/number_of_ways_to_make_change","title":"Number Of Ways To Make Change","description":"Given an array of distinct positive integers representing coin denominations and a single non-negative integer n representing a target amount of money, write a function that returns the number of ways to make change for that target amount using the given coin denominations.","sidebar":"tutorialSidebar"},"medium/symetrical_tree":{"id":"medium/symetrical_tree","title":"Symmetrical Tree","description":"Write a function that takes in a Binary Tree and returns if that tree is symmetrical. A tree is symmetrical if the left and right subtrees are mirror images of each other.","sidebar":"tutorialSidebar"},"medium/valid_ip_address":{"id":"medium/valid_ip_address","title":"Valid IP Addresses","description":"You\'re given a string of length 12 or smaller, containing only digits. Write a function that returns all the possible IP addresses that can be created by inserting three .s in the string.","sidebar":"tutorialSidebar"}}}')}}]);