"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Easy","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Binary Search","href":"/docs/easy/binary_search","docId":"easy/binary_search"},{"type":"link","label":"Branch sum","href":"/docs/easy/branch_sum","docId":"easy/branch_sum"},{"type":"link","label":"BST Traversal","href":"/docs/easy/bst_traversal","docId":"easy/bst_traversal"},{"type":"link","label":"Bubble Sort","href":"/docs/easy/bubble_sort","docId":"easy/bubble_sort"},{"type":"link","label":"Caesar Cipher Encryptor","href":"/docs/easy/ceasar_cipher_encryptor","docId":"easy/ceasar_cipher_encryptor"},{"type":"link","label":"Class Photos","href":"/docs/easy/class_photos","docId":"easy/class_photos"},{"type":"link","label":"Common Characters","href":"/docs/easy/common_characters","docId":"easy/common_characters"},{"type":"link","label":"Depth-first Search","href":"/docs/easy/depth_first_search","docId":"easy/depth_first_search"},{"type":"link","label":"Evaluate Expression Tree","href":"/docs/easy/evaluate_expression_tree","docId":"easy/evaluate_expression_tree"},{"type":"link","label":"Find Closest Value In BST","href":"/docs/easy/find_closest_value_in_bst","docId":"easy/find_closest_value_in_bst"},{"type":"link","label":"Find Kth Largest Value In BST","href":"/docs/easy/find_kth_largest_value_in_bst","docId":"easy/find_kth_largest_value_in_bst"},{"type":"link","label":"Find Three Largest Numbers","href":"/docs/easy/find_three_largest_numbers","docId":"easy/find_three_largest_numbers"},{"type":"link","label":"First Non-Repeating Character","href":"/docs/easy/first_non_repeating_character","docId":"easy/first_non_repeating_character"},{"type":"link","label":"Generate Document","href":"/docs/easy/generate_document","docId":"easy/generate_document"},{"type":"link","label":"Insertion Sort","href":"/docs/easy/insertion_sort","docId":"easy/insertion_sort"},{"type":"link","label":"Longest Palindromic Substring","href":"/docs/easy/longest_palindromic_substring","docId":"easy/longest_palindromic_substring"},{"type":"link","label":"Middle node","href":"/docs/easy/middle_node","docId":"easy/middle_node"},{"type":"link","label":"Min Height BST","href":"/docs/easy/min_height_bst","docId":"easy/min_height_bst"},{"type":"link","label":"Validate Subsequence","href":"/docs/easy/minimum_waiting_time","docId":"easy/minimum_waiting_time"},{"type":"link","label":"Node Depths","href":"/docs/easy/node_depths","docId":"easy/node_depths"},{"type":"link","label":"Non-Constructible Change","href":"/docs/easy/non_constructible_change","docId":"easy/non_constructible_change"},{"type":"link","label":"Nth Fibonacci","href":"/docs/easy/nth_fibonacci","docId":"easy/nth_fibonacci"},{"type":"link","label":"Optimal freelancing","href":"/docs/easy/optimal_freelancing","docId":"easy/optimal_freelancing"},{"type":"link","label":"Palindrome Check","href":"/docs/easy/palindrome_check","docId":"easy/palindrome_check"},{"type":"link","label":"Product Sum","href":"/docs/easy/product_sum","docId":"easy/product_sum"},{"type":"link","label":"Reconstruct BST","href":"/docs/easy/reconstruct_bst","docId":"easy/reconstruct_bst"},{"type":"link","label":"Remove Duplicates From Linked List","href":"/docs/easy/remove_duplicates_from_linked_list","docId":"easy/remove_duplicates_from_linked_list"},{"type":"link","label":"Run-Length Encoding","href":"/docs/easy/run_length_encoding","docId":"easy/run_length_encoding"},{"type":"link","label":"Selection Sort","href":"/docs/easy/selection_sort","docId":"easy/selection_sort"},{"type":"link","label":"Semordnilap","href":"/docs/easy/semordnilap","docId":"easy/semordnilap"},{"type":"link","label":"Sorted Squared Array","href":"/docs/easy/sorted_squared_array","docId":"easy/sorted_squared_array"},{"type":"link","label":"Tandem Bicycle","href":"/docs/easy/tandem_bicycle","docId":"easy/tandem_bicycle"},{"type":"link","label":"Tournament Winner","href":"/docs/easy/tournament_winner","docId":"easy/tournament_winner"},{"type":"link","label":"Transpose Matrix","href":"/docs/easy/transpose_matrix","docId":"easy/transpose_matrix"},{"type":"link","label":"Two number sum","href":"/docs/easy/two_number_sum","docId":"easy/two_number_sum"},{"type":"link","label":"Validate BST","href":"/docs/easy/validate_bst","docId":"easy/validate_bst"},{"type":"link","label":"Validate Subsequence","href":"/docs/easy/validate_subsequence","docId":"easy/validate_subsequence"}],"href":"/docs/category/easy"},{"type":"category","label":"Medium","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Array Of Products","href":"/docs/medium/array_of_products","docId":"medium/array_of_products"},{"type":"link","label":"Best Seat","href":"/docs/medium/best_seat","docId":"medium/best_seat"},{"type":"link","label":"Binary Tree Diameter","href":"/docs/medium/binary_tree_diameter","docId":"medium/binary_tree_diameter"},{"type":"link","label":"BST Construction","href":"/docs/medium/bst_construction","docId":"medium/bst_construction"},{"type":"link","label":"Colliding Asteroids","href":"/docs/medium/colliding_asteroids","docId":"medium/colliding_asteroids"},{"type":"link","label":"Find Successor","href":"/docs/medium/find_successtor","docId":"medium/find_successtor"},{"type":"link","label":"First Duplicate Value","href":"/docs/medium/first_duplicate_value","docId":"medium/first_duplicate_value"},{"type":"link","label":"Group Anagrams","href":"/docs/medium/group_anagrams","docId":"medium/group_anagrams"},{"type":"link","label":"Height Balanced Binary Tree","href":"/docs/medium/height_balanced_binary_tree","docId":"medium/height_balanced_binary_tree"},{"type":"link","label":"Kadane\'s Algorithm","href":"/docs/medium/kadanes_algorithm","docId":"medium/kadanes_algorithm"},{"type":"link","label":"Levenshtein Distance","href":"/docs/medium/levenshtein_distance","docId":"medium/levenshtein_distance"},{"type":"link","label":"Longest Palindromic Substring","href":"/docs/medium/longest_palindromic_substring","docId":"medium/longest_palindromic_substring"},{"type":"link","label":"Longest Peak","href":"/docs/medium/longest_peak","docId":"medium/longest_peak"},{"type":"link","label":"Majority Element","href":"/docs/medium/majority_element","docId":"medium/majority_element"},{"type":"link","label":"Max Subset Sum No Adjacent","href":"/docs/medium/max_subset_sum_no_adjadent","docId":"medium/max_subset_sum_no_adjadent"},{"type":"link","label":"Merge Overlapping Intervals","href":"/docs/medium/merge_overlapping_intervals","docId":"medium/merge_overlapping_intervals"},{"type":"link","label":"Min Number Of Coins For Change","href":"/docs/medium/min_number_of_coins_for_change","docId":"medium/min_number_of_coins_for_change"},{"type":"link","label":"Minimum Characters For Words","href":"/docs/medium/minimum_characters_for_words","docId":"medium/minimum_characters_for_words"},{"type":"link","label":"Missing Numbers","href":"/docs/medium/missing_number","docId":"medium/missing_number"},{"type":"link","label":"Monotonic Array","href":"/docs/medium/monotonic_array","docId":"medium/monotonic_array"},{"type":"link","label":"Move Element To End","href":"/docs/medium/move_element_to_end","docId":"medium/move_element_to_end"},{"type":"link","label":"Number Of Ways To Make Change","href":"/docs/medium/number_of_ways_to_make_change","docId":"medium/number_of_ways_to_make_change"},{"type":"link","label":"One Edit","href":"/docs/medium/one_edit","docId":"medium/one_edit"},{"type":"link","label":"Reverse Words In String","href":"/docs/medium/reverse_words_in_string","docId":"medium/reverse_words_in_string"},{"type":"link","label":"Smallest Difference","href":"/docs/medium/smallest_difference","docId":"medium/smallest_difference"},{"type":"link","label":"Spiral Traverse","href":"/docs/medium/spiral_traverse","docId":"medium/spiral_traverse"},{"type":"link","label":"Suffix Trie Construction","href":"/docs/medium/suffix_trie_construction","docId":"medium/suffix_trie_construction"},{"type":"link","label":"Sweet And Savory","href":"/docs/medium/sweet_and_savory","docId":"medium/sweet_and_savory"},{"type":"link","label":"Symmetrical Tree","href":"/docs/medium/symetrical_tree","docId":"medium/symetrical_tree"},{"type":"link","label":"Three Number Sum","href":"/docs/medium/three_number_sum","docId":"medium/three_number_sum"},{"type":"link","label":"Valid IP Addresses","href":"/docs/medium/valid_ip_address","docId":"medium/valid_ip_address"},{"type":"link","label":"Zero Sum Subarray","href":"/docs/medium/zero_sum_subarray","docId":"medium/zero_sum_subarray"}],"href":"/docs/category/medium"}]},"docs":{"easy/binary_search":{"id":"easy/binary_search","title":"Binary Search","description":"Write a function that takes in a sorted array of integers as well as a target integer. The function should use the Binary Search algorithm to determine if the target integer is contained in the array and should return its index if it is, otherwise -1.","sidebar":"tutorialSidebar"},"easy/branch_sum":{"id":"easy/branch_sum","title":"Branch sum","description":"Write a function that takes in a Binary Tree and returns a list of its branch sums ordered from leftmost branch sum to rightmost branch sum.","sidebar":"tutorialSidebar"},"easy/bst_traversal":{"id":"easy/bst_traversal","title":"BST Traversal","description":"Write three functions that take in a Binary Search Tree (BST) and an empty array, traverse the BST, add its nodes\' values to the input array, and return that array. The three functions should traverse the BST using the in-order, pre-order, and post-order tree-traversal techniques, respectively.","sidebar":"tutorialSidebar"},"easy/bubble_sort":{"id":"easy/bubble_sort","title":"Bubble Sort","description":"Write a function that takes in an array of integers and returns a sorted version of that array. Use the Bubble Sort algorithm to sort the array.","sidebar":"tutorialSidebar"},"easy/ceasar_cipher_encryptor":{"id":"easy/ceasar_cipher_encryptor","title":"Caesar Cipher Encryptor","description":"Given a non-empty string of lowercase letters and a non-negative integer representing a key, write a function that returns a new string obtained by shifting every letter in the input string by k positions in the alphabet, where k is the key.","sidebar":"tutorialSidebar"},"easy/class_photos":{"id":"easy/class_photos","title":"Class Photos","description":"It\'s photo day at the local school, and you\'re the photographer assigned to take class photos. The class that you\'ll be photographing has an even number of students, and all these students are wearing red or blue shirts. In fact, exactly half of the class is wearing red shirts, and the other half is wearing blue shirts. You\'re responsible for arranging the students in two rows before taking the photo. Each row should contain the same number of the students and should adhere to the following guidelines:","sidebar":"tutorialSidebar"},"easy/common_characters":{"id":"easy/common_characters","title":"Common Characters","description":"Write a function that takes in a non-empty list of non-empty strings and returns a list of characters that are common to all strings in the list, ignoring multiplicity.","sidebar":"tutorialSidebar"},"easy/depth_first_search":{"id":"easy/depth_first_search","title":"Depth-first Search","description":"You\'re given a Node class that has a name and an array of optional children nodes. When put together, nodes form an acyclic tree-like structure.","sidebar":"tutorialSidebar"},"easy/evaluate_expression_tree":{"id":"easy/evaluate_expression_tree","title":"Evaluate Expression Tree","description":"You\'re given a binary expression tree. Write a function to evaluate this tree mathematically and return a single resulting integer.","sidebar":"tutorialSidebar"},"easy/find_closest_value_in_bst":{"id":"easy/find_closest_value_in_bst","title":"Find Closest Value In BST","description":"Write a function that takes in a Binary Search Tree (BST) and a target integer value and returns the closest value to that target value contained in the BST.","sidebar":"tutorialSidebar"},"easy/find_kth_largest_value_in_bst":{"id":"easy/find_kth_largest_value_in_bst","title":"Find Kth Largest Value In BST","description":"Write a function that takes in a Binary Search Tree (BST) and a positive integer k and returns the kth largest integer contained in the BST.","sidebar":"tutorialSidebar"},"easy/find_three_largest_numbers":{"id":"easy/find_three_largest_numbers","title":"Find Three Largest Numbers","description":"Write a function that takes in an array of at least three integers and, without sorting the input array, returns a sorted array of the three largest integers in the input array.","sidebar":"tutorialSidebar"},"easy/first_non_repeating_character":{"id":"easy/first_non_repeating_character","title":"First Non-Repeating Character","description":"Write a function that takes in a string of lowercase English-alphabet letters and returns the index of the string\'s first non-repeating character.","sidebar":"tutorialSidebar"},"easy/generate_document":{"id":"easy/generate_document","title":"Generate Document","description":"You\'re given a string of available characters and a string representing a document that you need to generate. Write a function that determines if you can generate the document using the available characters. If you can generate the document, your function should return true; otherwise, it should return false.","sidebar":"tutorialSidebar"},"easy/insertion_sort":{"id":"easy/insertion_sort","title":"Insertion Sort","description":"Write a function that takes in an array of integers and returns a sorted version of that array. Use the Insertion Sort algorithm to sort the array.","sidebar":"tutorialSidebar"},"easy/longest_palindromic_substring":{"id":"easy/longest_palindromic_substring","title":"Longest Palindromic Substring","description":"Write a function that, given a string, returns its longest palindromic substring.","sidebar":"tutorialSidebar"},"easy/middle_node":{"id":"easy/middle_node","title":"Middle node","description":"You\'re given a Linked List with at least one node. Write a function that returns the middle node of the Linked List. If there are two middle nodes (i.e. an even length list), your function should return the second of these nodes.","sidebar":"tutorialSidebar"},"easy/min_height_bst":{"id":"easy/min_height_bst","title":"Min Height BST","description":"Write a function that takes in a non-empty sorted array of distinct integers, constructs a BST from the integers, and returns the root of the BST.","sidebar":"tutorialSidebar"},"easy/minimum_waiting_time":{"id":"easy/minimum_waiting_time","title":"Validate Subsequence","description":"You\'re given a non-empty array of positive integers representing the amounts of time that specific queries take to execute. Only one query can be executed at a time, but the queries can be executed in any order.","sidebar":"tutorialSidebar"},"easy/node_depths":{"id":"easy/node_depths","title":"Node Depths","description":"The distance between a node in a Binary Tree and the tree\'s root is called the node\'s depth.","sidebar":"tutorialSidebar"},"easy/non_constructible_change":{"id":"easy/non_constructible_change","title":"Non-Constructible Change","description":"Given an array of positive integers representing the values of coins in your possession, write a function that returns the minimum amount of change (the minimum sum of money) that you cannot create. The given coins can have any positive integer value and aren\'t necessarily unique (i.e., you can have multiple coins of the same value).","sidebar":"tutorialSidebar"},"easy/nth_fibonacci":{"id":"easy/nth_fibonacci","title":"Nth Fibonacci","description":"The Fibonacci sequence is defined as follows: the first number of the sequence is 0, the second number is 1, and the nth number is the sum of the (n - 1)th and (n - 2)th numbers. Write a function that takes in an integer n and returns the nth Fibonacci number.","sidebar":"tutorialSidebar"},"easy/optimal_freelancing":{"id":"easy/optimal_freelancing","title":"Optimal freelancing","description":"You recently started freelance software development and have been offered a variety of job opportunities. Each job has a deadline, meaning there is no value in completing the work after the deadline. Additionally, each job has an associated payment representing the profit for completing that job. Given this information, write a function that returns the maximum profit that can be obtained in a 7-day period.","sidebar":"tutorialSidebar"},"easy/palindrome_check":{"id":"easy/palindrome_check","title":"Palindrome Check","description":"Write a function that takes in a non-empty string and that returns a boolean representing whether the string is a palindrome.","sidebar":"tutorialSidebar"},"easy/product_sum":{"id":"easy/product_sum","title":"Product Sum","description":"Write a function that takes in a \\"special\\" array and returns its product sum.","sidebar":"tutorialSidebar"},"easy/reconstruct_bst":{"id":"easy/reconstruct_bst","title":"Reconstruct BST","description":"The pre-order traversal of a Binary Tree is a traversal technique that starts at the tree\'s root node and visits nodes in the following order:","sidebar":"tutorialSidebar"},"easy/remove_duplicates_from_linked_list":{"id":"easy/remove_duplicates_from_linked_list","title":"Remove Duplicates From Linked List","description":"You\'re given the head of a Singly Linked List whose nodes are in sorted order with respect to their values. Write a function that returns a modified version of the Linked List that doesn\'t contain any nodes with duplicate values. The Linked List should be modified in place (i.e., you shouldn\'t create a brand new list), and the modified Linked List should still have its nodes sorted with respect to their values.","sidebar":"tutorialSidebar"},"easy/run_length_encoding":{"id":"easy/run_length_encoding","title":"Run-Length Encoding","description":"Write a function that takes in a non-empty string and returns its run-length encoding.","sidebar":"tutorialSidebar"},"easy/selection_sort":{"id":"easy/selection_sort","title":"Selection Sort","description":"Write a function that takes in an array of integers and returns a sorted version of that array. Use the Selection Sort algorithm to sort the array.","sidebar":"tutorialSidebar"},"easy/semordnilap":{"id":"easy/semordnilap","title":"Semordnilap","description":"Semordnilap","sidebar":"tutorialSidebar"},"easy/sorted_squared_array":{"id":"easy/sorted_squared_array","title":"Sorted Squared Array","description":"Write a function that takes in a non-empty array of integers that are sorted in ascending order and returns a new array of the same length with the squares of the original integers also sorted in ascending order.","sidebar":"tutorialSidebar"},"easy/tandem_bicycle":{"id":"easy/tandem_bicycle","title":"Tandem Bicycle","description":"A tandem bicycle is a bicycle that\'s operated by two people: person A and person B. Both people pedal the bicycle, but the person that pedals faster dictates the speed of the bicycle. So if person A pedals at a speed of 5, and person B pedals at a speed of 4, the tandem bicycle moves at a speed of 5 (i.e., tandemSpeed = max(speedA, speedB)).","sidebar":"tutorialSidebar"},"easy/tournament_winner":{"id":"easy/tournament_winner","title":"Tournament Winner","description":"There\'s an algorithms tournament taking place in which teams of programmers compete against each other to solve algorithmic problems as fast as possible. Teams compete in a round robin, where each team faces off against all other teams. Only two teams compete against each other at a time, and for each competition, one team is designated the home team, while the other team is the away team. In each competition there\'s always one winner and one loser; there are no ties. A team receives 3 points if it wins and 0 points if it loses. The winner of the tournament is the team that receives the most amount of points.","sidebar":"tutorialSidebar"},"easy/transpose_matrix":{"id":"easy/transpose_matrix","title":"Transpose Matrix","description":"You\'re given a 2D array of integers matrix. Write a function that returns the transpose of the matrix.","sidebar":"tutorialSidebar"},"easy/two_number_sum":{"id":"easy/two_number_sum","title":"Two number sum","description":"Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. If any two numbers in the input array sum up to the target sum, the function should return them in an array, in any order. If no two numbers sum up to the target sum, the function should return an empty array.","sidebar":"tutorialSidebar"},"easy/validate_bst":{"id":"easy/validate_bst","title":"Validate BST","description":"Write a function that takes in a potentially invalid Binary Search Tree (BST) and returns a boolean representing whether the BST is valid.","sidebar":"tutorialSidebar"},"easy/validate_subsequence":{"id":"easy/validate_subsequence","title":"Validate Subsequence","description":"Given two non-empty arrays of integers, write a function that determines whether the second array is a subsequence of the first one.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"","sidebar":"tutorialSidebar"},"medium/array_of_products":{"id":"medium/array_of_products","title":"Array Of Products","description":"Write a function that takes in a non-empty array of integers and returns an array of the same length, where each element in the output array is equal to the product of every other number in the input array.","sidebar":"tutorialSidebar"},"medium/best_seat":{"id":"medium/best_seat","title":"Best Seat","description":"You walk into a theatre you\'re about to see a show in. The usher within the theatre walks you to your row and mentions you\'re allowed to sit anywhere within the given row. Naturally you\'d like to sit in the seat that gives you the most space. You also would prefer this space to be evenly distributed on either side of you (e.g. if there are three empty seats in a row, you would prefer to sit in the middle of those three seats).","sidebar":"tutorialSidebar"},"medium/binary_tree_diameter":{"id":"medium/binary_tree_diameter","title":"Binary Tree Diameter","description":"Write a function that takes in a Binary Tree and returns its diameter. The diameter of a binary tree is defined as the length of its longest path, even if that path doesn\'t pass through the root of the tree.","sidebar":"tutorialSidebar"},"medium/bst_construction":{"id":"medium/bst_construction","title":"BST Construction","description":"Write a BST class for a Binary Search Tree. The class should support:","sidebar":"tutorialSidebar"},"medium/colliding_asteroids":{"id":"medium/colliding_asteroids","title":"Colliding Asteroids","description":"You\'re given an array of integers asteroids, where each integer represents the size of an asteroid. The sign of the integer represents the direction the asteroid is moving (positive = right, negative = left). All asteroids move at the same speed, meaning that two asteroids moving in the same direction can never collide.","sidebar":"tutorialSidebar"},"medium/find_successtor":{"id":"medium/find_successtor","title":"Find Successor","description":"Write a function that takes in a Binary Tree (where nodes have an additional pointer to their parent node) as well as a node contained in that tree and returns the given node\'s successor.","sidebar":"tutorialSidebar"},"medium/first_duplicate_value":{"id":"medium/first_duplicate_value","title":"First Duplicate Value","description":"Given an array of integers between 1 and n, inclusive, where n is the length of the array, write a function that returns the first integer that appears more than once (when the array is read from left to right).","sidebar":"tutorialSidebar"},"medium/group_anagrams":{"id":"medium/group_anagrams","title":"Group Anagrams","description":"Write a function that takes in an array of strings and groups anagrams together.","sidebar":"tutorialSidebar"},"medium/height_balanced_binary_tree":{"id":"medium/height_balanced_binary_tree","title":"Height Balanced Binary Tree","description":"You\'re given the root node of a Binary Tree. Write a function that returns true if this Binary Tree is height balanced and false if it isn\'t.","sidebar":"tutorialSidebar"},"medium/kadanes_algorithm":{"id":"medium/kadanes_algorithm","title":"Kadane\'s Algorithm","description":"Write a function that takes in a non-empty array of integers and returns the maximum sum that can be obtained by summing up all of the integers in a non-empty subarray of the input array. A subarray must only contain adjacent numbers (numbers next to each other in the input array).","sidebar":"tutorialSidebar"},"medium/levenshtein_distance":{"id":"medium/levenshtein_distance","title":"Levenshtein Distance","description":"Write a function that takes in two strings and returns the minimum number of edit operations that need to be performed on the first string to obtain the second string.","sidebar":"tutorialSidebar"},"medium/longest_palindromic_substring":{"id":"medium/longest_palindromic_substring","title":"Longest Palindromic Substring","description":"Write a function that, given a string, returns its longest palindromic substring.","sidebar":"tutorialSidebar"},"medium/longest_peak":{"id":"medium/longest_peak","title":"Longest Peak","description":"Write a function that takes in an array of integers and returns the length of the longest peak in the array.","sidebar":"tutorialSidebar"},"medium/majority_element":{"id":"medium/majority_element","title":"Majority Element","description":"Write a function that takes in a non-empty, unordered array of positive integers and returns the array\'s majority element without sorting the array and without using more than constant space.","sidebar":"tutorialSidebar"},"medium/max_subset_sum_no_adjadent":{"id":"medium/max_subset_sum_no_adjadent","title":"Max Subset Sum No Adjacent","description":"Write a function that takes in an array of positive integers and returns the maximum sum of non-adjacent elements in the array.","sidebar":"tutorialSidebar"},"medium/merge_overlapping_intervals":{"id":"medium/merge_overlapping_intervals","title":"Merge Overlapping Intervals","description":"Write a function that takes in a non-empty array of arbitrary intervals, merges any overlapping intervals, and returns the new intervals in no particular order.","sidebar":"tutorialSidebar"},"medium/min_number_of_coins_for_change":{"id":"medium/min_number_of_coins_for_change","title":"Min Number Of Coins For Change","description":"Given an array of positive integers representing coin denominations and a single non-negative integer n representing a target amount of money, write a function that returns the smallest number of coins needed to make change for (to sum up to) that target amount using the given coin denominations.","sidebar":"tutorialSidebar"},"medium/minimum_characters_for_words":{"id":"medium/minimum_characters_for_words","title":"Minimum Characters For Words","description":"Write a function that takes in an array of words and returns the smallest array of characters needed to form all of the words. The characters don\'t need to be in any particular order.","sidebar":"tutorialSidebar"},"medium/missing_number":{"id":"medium/missing_number","title":"Missing Numbers","description":"You\'re given an unordered list of unique integers nums in the range [1, n], where n represents the length of nums + 2. This means that two numbers in this range are missing from the list.","sidebar":"tutorialSidebar"},"medium/monotonic_array":{"id":"medium/monotonic_array","title":"Monotonic Array","description":"Write a function that takes in an array of integers and returns a boolean representing whether the array is monotonic.","sidebar":"tutorialSidebar"},"medium/move_element_to_end":{"id":"medium/move_element_to_end","title":"Move Element To End","description":"You\'re given an array of integers and an integer. Write a function that moves all instances of that integer in the array to the end of the array and returns the array.","sidebar":"tutorialSidebar"},"medium/number_of_ways_to_make_change":{"id":"medium/number_of_ways_to_make_change","title":"Number Of Ways To Make Change","description":"Given an array of distinct positive integers representing coin denominations and a single non-negative integer n representing a target amount of money, write a function that returns the number of ways to make change for that target amount using the given coin denominations.","sidebar":"tutorialSidebar"},"medium/one_edit":{"id":"medium/one_edit","title":"One Edit","description":"You\'re given two strings stringOne and stringTwo. Write a function that determines if these two strings can be made equal using only one edit.","sidebar":"tutorialSidebar"},"medium/reverse_words_in_string":{"id":"medium/reverse_words_in_string","title":"Reverse Words In String","description":"Write a function that takes in a string of words separated by one or more whitespaces and returns a string that has these words in reverse order. For example, given the string \\"tim is great\\", your function should return \\"great is tim\\".","sidebar":"tutorialSidebar"},"medium/smallest_difference":{"id":"medium/smallest_difference","title":"Smallest Difference","description":"Write a function that takes in two non-empty arrays of integers, finds the pair of numbers (one from each array) whose absolute difference is closest to zero, and returns an array containing these two numbers, with the number from the first array in the first position.","sidebar":"tutorialSidebar"},"medium/spiral_traverse":{"id":"medium/spiral_traverse","title":"Spiral Traverse","description":"Write a function that takes in an n x m two-dimensional array (that can be square-shaped when n == m) and returns a one-dimensional array of all the array\'s elements in spiral order.","sidebar":"tutorialSidebar"},"medium/suffix_trie_construction":{"id":"medium/suffix_trie_construction","title":"Suffix Trie Construction","description":"Write a SuffixTrie class for a Suffix-Trie-like data structure. The class should have a root property set to be the root node of the trie and should support:","sidebar":"tutorialSidebar"},"medium/sweet_and_savory":{"id":"medium/sweet_and_savory","title":"Sweet And Savory","description":"You\'re hosting an event at a food festival and want to showcase the best possible pairing of two dishes from the festival that complement each other\'s flavor profile.","sidebar":"tutorialSidebar"},"medium/symetrical_tree":{"id":"medium/symetrical_tree","title":"Symmetrical Tree","description":"Write a function that takes in a Binary Tree and returns if that tree is symmetrical. A tree is symmetrical if the left and right subtrees are mirror images of each other.","sidebar":"tutorialSidebar"},"medium/three_number_sum":{"id":"medium/three_number_sum","title":"Three Number Sum","description":"Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. The function should find all triplets in the array that sum up to the target sum and return a two-dimensional array of all these triplets. The numbers in each triplet should be ordered in ascending order, and the triplets themselves should be ordered in ascending order with respect to the numbers they hold.","sidebar":"tutorialSidebar"},"medium/valid_ip_address":{"id":"medium/valid_ip_address","title":"Valid IP Addresses","description":"You\'re given a string of length 12 or smaller, containing only digits. Write a function that returns all the possible IP addresses that can be created by inserting three .s in the string.","sidebar":"tutorialSidebar"},"medium/zero_sum_subarray":{"id":"medium/zero_sum_subarray","title":"Zero Sum Subarray","description":"You\'re given a list of integers nums. Write a function that returns a boolean representing whether there exists a zero-sum subarray of nums.","sidebar":"tutorialSidebar"}}}')}}]);