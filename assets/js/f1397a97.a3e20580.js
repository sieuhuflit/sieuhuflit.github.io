"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8912],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},l=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),p=s(t),l=o,d=p["".concat(u,".").concat(l)]||p[l]||f[l]||i;return t?r.createElement(d,a(a({ref:n},c),{},{components:t})):r.createElement(d,a({ref:n},c))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=l;var m={};for(var u in n)hasOwnProperty.call(n,u)&&(m[u]=n[u]);m.originalType=e,m[p]="string"==typeof e?e:o,a[1]=m;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}l.displayName="MDXCreateElement"},1073:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>m,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const i={},a="Min Number Of Coins For Change",m={unversionedId:"medium/min_number_of_coins_for_change",id:"medium/min_number_of_coins_for_change",title:"Min Number Of Coins For Change",description:"Given an array of positive integers representing coin denominations and a single non-negative integer n representing a target amount of money, write a function that returns the smallest number of coins needed to make change for (to sum up to) that target amount using the given coin denominations.",source:"@site/docs/medium/min_number_of_coins_for_change.md",sourceDirName:"medium",slug:"/medium/min_number_of_coins_for_change",permalink:"/docs/medium/min_number_of_coins_for_change",draft:!1,editUrl:"https://github.com/sieuhuflit/sieuhuflit.github.io/tree/main/docs/medium/min_number_of_coins_for_change.md",tags:[],version:"current",lastUpdatedBy:"Sieu Thai",lastUpdatedAt:1696997789,formattedLastUpdatedAt:"Oct 11, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Merge Overlapping Intervals",permalink:"/docs/medium/merge_overlapping_intervals"},next:{title:"Minimum Characters For Words",permalink:"/docs/medium/minimum_characters_for_words"}},u={},s=[],c={toc:s},p="wrapper";function f(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"min-number-of-coins-for-change"},"Min Number Of Coins For Change"),(0,o.kt)("admonition",{title:"Min Number Of Coins For Change",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Given an array of positive integers representing coin denominations and a single non-negative integer n representing a target amount of money, write a function that returns the smallest number of coins needed to make change for (to sum up to) that target amount using the given coin denominations."),(0,o.kt)("p",{parentName:"admonition"},"Note that you have access to an unlimited amount of coins. In other words, if the denominations are ","[1, 5, 10]",", you have access to an unlimited amount of 1s, 5s, and 10s."),(0,o.kt)("p",{parentName:"admonition"},"If it's impossible to make change for the target amount, return -1."),(0,o.kt)("p",{parentName:"admonition"},"Sample Input"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"n = 7\ndenoms = [1, 5, 10]\n")),(0,o.kt)("p",{parentName:"admonition"},"Sample Output"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"3 // 2x1 + 1x5\n"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Solution"',title:'"Solution"'},"// O(nd) time | O(n) space\nfunction minNumberOfCoinsForChange(n, denoms) {\n  const numOfCoins = new Array(n + 1).fill(Infinity);\n  numOfCoins[0] = 0;\n  for (let denom of denoms) {\n    for (let amount = 0 ; amount < numOfCoins.length ; amount++) {\n      if (denom <= amount) {\n        numOfCoins[amount] = Math.min(numOfCoins[amount], numOfCoins[amount - denom] + 1);\n      }\n    }\n  }\n  return numOfCoins[n] !== Infinity ? numOfCoins[n] : -1;\n}\n\n")))}f.isMDXComponent=!0}}]);