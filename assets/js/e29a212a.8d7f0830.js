"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2109],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>m});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),d=function(e){var r=a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=d(e.components);return a.createElement(l.Provider,{value:r},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},y=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(t),y=n,m=c["".concat(l,".").concat(y)]||c[y]||p[y]||o;return t?a.createElement(m,s(s({ref:r},u),{},{components:t})):a.createElement(m,s({ref:r},u))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=y;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[c]="string"==typeof e?e:n,s[1]=i;for(var d=2;d<o;d++)s[d]=t[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},5070:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=t(7462),n=(t(7294),t(3905));const o={tags:["Arrays"]},s="Sorted Squared Array",i={unversionedId:"easy/sorted_squared_array",id:"easy/sorted_squared_array",title:"Sorted Squared Array",description:"Write a function that takes in a non-empty array of integers that are sorted in ascending order and returns a new array of the same length with the squares of the original integers also sorted in ascending order.",source:"@site/docs/easy/sorted_squared_array.md",sourceDirName:"easy",slug:"/easy/sorted_squared_array",permalink:"/docs/easy/sorted_squared_array",draft:!1,editUrl:"https://github.com/sieuhuflit/sieuhuflit.github.io/tree/main/docs/easy/sorted_squared_array.md",tags:[{label:"Arrays",permalink:"/docs/tags/arrays"}],version:"current",lastUpdatedBy:"Sieu Thai",lastUpdatedAt:1696998572,formattedLastUpdatedAt:"Oct 11, 2023",frontMatter:{tags:["Arrays"]},sidebar:"tutorialSidebar",previous:{title:"Semordnilap",permalink:"/docs/easy/semordnilap"},next:{title:"Tandem Bicycle",permalink:"/docs/easy/tandem_bicycle"}},l={},d=[],u={toc:d},c="wrapper";function p(e){let{components:r,...t}=e;return(0,n.kt)(c,(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"sorted-squared-array"},"Sorted Squared Array"),(0,n.kt)("admonition",{title:"Sorted Squared Array",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Write a function that takes in a non-empty array of integers that are sorted in ascending order and returns a new array of the same length with the squares of the original integers also sorted in ascending order."),(0,n.kt)("p",{parentName:"admonition"},"Sample Input"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre"},"array = [1, 2, 3, 5, 6, 8, 9]\n")),(0,n.kt)("p",{parentName:"admonition"},"Sample Output"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre"},"[1, 4, 9, 25, 36, 64, 81]\n"))),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Solution 1"',title:'"Solution','1"':!0},"// O(nlogn) time | O(n) space\nfunction sortedSquaredArray(array) {\n  const sortedSquares = new Array(array.length).fill(0);\n\n  for (let i = 0; i < array.length; i++) {\n    const element = array[i];\n    sortedSquares[i] = element * element;\n  }\n  sortedSquares.sort((a, b) => a- b);\n  return sortedSquares;\n}\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Solution 2"',title:'"Solution','2"':!0},"// O(n) time | O(n) space\nfunction sortedSquaredArray(array) {\n  const sortedSquares = new Array(array.length).fill(0);\n  let start = 0;\n  let end = array.length - 1;\n  for (let i = array.length - 1; i >= 0; i--) {\n    const startValue = array[start];\n    const endValue = array[end];\n    if (Math.abs(startValue) < Math.abs(endValue)) {\n      sortedSquares[i] = endValue * endValue;\n      end--;\n    } else {\n      sortedSquares[i] = startValue * startValue;\n      start++;\n    }\n  }\n  return sortedSquares;\n\n}\n")))}p.isMDXComponent=!0}}]);