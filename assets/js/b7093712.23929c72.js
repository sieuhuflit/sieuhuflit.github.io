"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6559],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),d=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=d(e.components);return n.createElement(p.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=d(t),u=a,f=c["".concat(p,".").concat(u)]||c[u]||m[u]||o;return t?n.createElement(f,i(i({ref:r},l),{},{components:t})):n.createElement(f,i({ref:r},l))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2232:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var n=t(7462),a=(t(7294),t(3905));const o={},i="Semordnilap",s={unversionedId:"easy/semordnilap",id:"easy/semordnilap",title:"Semordnilap",description:"Semordnilap",source:"@site/docs/easy/semordnilap.md",sourceDirName:"easy",slug:"/easy/semordnilap",permalink:"/docs/easy/semordnilap",draft:!1,editUrl:"https://github.com/sieuhuflit/sieuhuflit.github.io/tree/main/docs/easy/semordnilap.md",tags:[],version:"current",lastUpdatedBy:"Sieu Thai",lastUpdatedAt:1696997124,formattedLastUpdatedAt:"Oct 11, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Selection Sort",permalink:"/docs/easy/selection_sort"},next:{title:"Sorted Squared Array",permalink:"/docs/easy/sorted_squared_array"}},p={},d=[],l={toc:d},c="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(c,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"semordnilap"},"Semordnilap"),(0,a.kt)("admonition",{title:"Semordnilap",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Semordnilap\nWrite a function that takes in a list of unique strings and returns a list of semordnilap pairs."),(0,a.kt)("p",{parentName:"admonition"},'A semordnilap pair is defined as a set of different strings where the reverse of one word is the same as the forward version of the other. For example the words "diaper" and "repaid" are a semordnilap pair, as are the words "palindromes" and "semordnilap".'),(0,a.kt)("p",{parentName:"admonition"},"The order of the returned pairs and the order of the strings within each pair does not matter."),(0,a.kt)("p",{parentName:"admonition"},"Sample Input"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},'words = ["diaper", "abc", "test", "cba", "repaid"]\n')),(0,a.kt)("p",{parentName:"admonition"},"Sample Output"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},'[["diaper", "repaid"], ["abc", "cba"]]\n'))),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Solution"',title:'"Solution"'},'// O(n * m) time | O(n * m) space\n// n is number of words\n// m is the length of the longest word\nfunction semordnilap(words) {\n  const wordsSet = new Set(words);\n  const semordnilapPairs = [];\n\n  for (const word of words) {\n    const reverse = word.split("").reverse().join("");\n    if (wordsSet.has(reverse) && reverse !== word) {\n      semordnilapPairs.push([word, reverse]);\n      wordsSet.delete(word);\n      wordsSet.delete(reverse);\n    }\n  }\n  return semordnilapPairs;\n}\n')))}m.isMDXComponent=!0}}]);